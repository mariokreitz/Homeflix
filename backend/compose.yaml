services:
  db:
    image: postgres:16-alpine
    container_name: homeflix-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: homeflix
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    container_name: homeflix-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s

  db-init:
    image: node:20-alpine
    working_dir: /app
    profiles: [ "init" ]
    volumes:
      - .:/app
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/homeflix
      NODE_ENV: development
    depends_on:
      db:
        condition: service_healthy
    entrypoint: [
      "sh",
      "-c",
      "echo 'Initializing database...' && npx prisma migrate reset --force --schema=./prisma/schema.prisma && echo 'Database successfully initialized!'"
    ]
    restart: "no"

  backend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DATABASE_URL: postgresql://postgres:postgres@db:5432/homeflix
        REDIS_URL: redis://redis:6379
    container_name: homeflix-backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/homeflix
      REDIS_URL: redis://redis:6379
      NODE_ENV: development
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    ports:
      - "5500:5500"
    volumes:
      - ./src:/app/src:ro
      - ./prisma:/app/prisma:ro
      - ./public:/app/public:ro
      - ./logs:/app/logs
      - ./package.json:/app/package.json:ro
      - ./package-lock.json:/app/package-lock.json:ro
      - ./server.js:/app/server.js:ro
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost:5500/api/v1/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 15s

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: homeflix-frontend
    restart: unless-stopped
    ports:
      - "4200:80"
    depends_on:
      backend:
        condition: service_healthy
    profiles: [ "frontend", "full" ]

  pgadmin:
    image: dpage/pgadmin4
    container_name: homeflix-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: test@gmail.com
      PGADMIN_DEFAULT_PASSWORD: password123test
    ports:
      - "5050:80"
    depends_on:
      db:
        condition: service_healthy
    profiles: [ "dev", "tools" ]

volumes:
  db_data:
  redis_data:

networks:
  default:
    name: homeflix-network
    driver: bridge